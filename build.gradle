buildscript {
	repositories {
		mavenCentral()
		maven { url = "https://maven.minecraftforge.net/" }
	}
	
	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "2.3-SNAPSHOT"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
// ======================================================================================================

apply plugin: "java"
apply plugin: "eclipse"

version = "${minecraftVersion}-${modVersion}"
group = "${group}"
archivesBaseName = "${modID}"

sourceCompatibility = '1.8'
targetCompatibility = sourceCompatibility
compileJava.sourceCompatibility = sourceCompatibility
compileJava.targetCompatibility = targetCompatibility

minecraft {
    mappings = "${mcpMappings}"
    version = "${minecraftVersion}-${forgeVersionFG2Latest}"

    // Puts the mod version into the main class to prevent FML warning about missing version
    replace '%VERSION%', modVersion
    replaceIn "ESMTweaks.java"

    // Uses dedicated folders when running client or server 
    // if "-Pclient" or "-Pserver" is passed as argument to gradle.
    if (project.hasProperty('client')) {
        runDir = "instance/client"
    }
    else if(project.hasProperty('server')) {
        runDir = "instance/server"
    }
    else {
        runDir = "run"
    }

    makeObfSourceJar = false
}

runClient {
    args '--username', 'Tweaker'
    args '--uuid', '00000000-0000-0000-0000-000000000000'
    systemProperty "log4j.configurationFile", "log4j2-devfix.xml"
}

runServer {
    systemProperty "log4j.configurationFile", "log4j2-devfix.xml"
}

repositories {
    maven { 
        url "https://cursemaven.com"
    }
}

dependencies {
    deobfCompile "curse.maven:tool-progression-266550:3270468"
    // deobfCompile "curse.maven:epic-siege-mod-229449:3356157" // 13.169
    deobfCompile "curse.maven:epic-siege-mod-229449:2920048" // 13.168
}

processResources {

    inputs.property "version", project.modVersion

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand(
            'modVersion':project.modVersion,
            'minecraftVersion':project.minecraftVersion
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {

    def logLevel = "ALL"

    // -Prelease
    if (project.hasProperty('release')) {
        logLevel = "INFO"
    }
    else {
        logLevel = "ALL"
        classifier "dev"
    }
    
    manifest {
        attributes(
            // This sets the log level for this mod's logger
            "LogLevel": "${logLevel}" 
        )
    }
}